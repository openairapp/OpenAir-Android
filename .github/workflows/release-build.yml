# This workflow will build the app and publish the release on github
name: Release build
on:
  workflow_dispatch:
  #push:
  #branches:
  #- master
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '15.0.2'
      - name: Build with Gradle
        env:
          BUILD_KEYSTORE_PASSWORD: ${{ secrets.BUILD_KEYSTORE_PASSWORD }}
          BUILD_KEY_PASSWORD: ${{ secrets.BUILD_KEY_PASSWORD }}
        run: ./gradlew build
      - name: push artifact
        uses: actions/upload-artifact@v2
        with:
          name: Artifacts
          path: |
            version.properties
            app/build/outputs/apk/release
            app/build/reports
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: Artifacts
      - name: Get Version Name
        id: version
        run: echo "::set-output name=VERSION_NAME::$(cat version.properties | grep VERSION_NAME | awk -F"=" '{print $2}')"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.VERSION_NAME }}
          release_name: ${{ steps.version.outputs.VERSION_NAME }}
      - name: Add APK to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/release/app-release.apk
          asset_name: openAir-v${{ steps.version.outputs.VERSION_NAME }}.apk
          if-no-files-found: error